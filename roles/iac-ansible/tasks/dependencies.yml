---
- name: Execute 'oc version' command and store output in result variable
  ansible.builtin.command: oc version
  register: oc_version_output

- name: Parse OC Binary Version
  ansible.builtin.set_fact:
    oc_version: "{{ oc_version_output.stdout_lines[0].split(' ')[2] }}"
  when: oc_version_output.stdout_lines | length > 0

- name: Display OC Binary Version
  ansible.builtin.debug:
    msg: "OC Binary Version: {{ oc_version }}"
  when: oc_version is defined

- name: Downloading and Unarchiving the OCP binaries
  ansible.builtin.unarchive:
    src: "{{ openshift.release_url }}/{{ openshift.release }}/{{ item }}-linux.tar.gz"
    dest: "{{ home_dir }}"
    remote_src: true
    mode: '0775'
  loop:
    - openshift-client
    - openshift-install

- name: Copy Binaries to /usr/local/bin/
  ansible.builtin.copy:
    src: "{{ home_dir }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: '0755'
  become: true
  become_method: ansible.builtin.sudo
  loop:
    - oc
    - openshift-install
    - kubectl

- name: Remove Artifacts
  ansible.builtin.file:
    path: "{{ home_dir }}/{{ item }}"
    state: absent
  loop:
    - oc
    - openshift-install
    - kubectl
    - README.md
