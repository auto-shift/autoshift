---
- name: Get EC2 Instances Running
  amazon.aws.ec2_instance_info:
    filters:
      instance-state-name: ["running"]
  register: running_ec2s

- name: Check if cluster has already started Creating
  kubernetes.core.k8s_info:
    kind: ClusterDeployment
    api_version: hive.openshift.io/v1
    name: "{{ cluster_name }}"
    namespace: "{{ cluster_name }}"
  register: clusterdeployment
  failed_when:
    - clusterdeployment.failed
    - "clusterdeployment.module_stderr is defined and 'Failed to establish a new connection' not in clusterdeployment.module_stderr"

- name: Set create_cluster
  ansible.builtin.set_fact:
    create_cluster: true
  when:
    - clusterdeployment.resources is not defined or clusterdeployment.resources | length == 0
    - running_ec2s.instances | length < 2

# When mgmt cluster it is "local-cluster" in ACM else default is cluster_name
- name: Set acm_cluster_name if this is a mgmt style cluster
  ansible.builtin.set_fact:
    acm_cluster_name: "local-cluster"
  when: 
    - mgmt_cluster
    - not acm_disable_hub_self_management

- name: Gather Env Facts
  when: create_cluster
  block:

    - name: Setup Dependencies
      ansible.builtin.include_tasks: dependencies.yml
      when: not acm_cluster

    - name: "Gathering VPC facts from {{ vpc_name }}"
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": "{{ vpc_name }}"
      register: vpc_facts

    - name: Gathering private subnet facts
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{ vpc_facts.vpcs[0].id }}"
          "tag:use": private
      register: subnet_facts

    - name: Gather Hosted Zones
      amazon.aws.route53_info:
        query: hosted_zone
      register: hz_facts

    - name: Define hosted_zone_id
      ansible.builtin.set_fact:
        hosted_zone_id: "{{ item.Id.split('/')[2] }}"
      when: item.Name == cluster_name+'.'+base_domain+'.'
      loop: "{{ hz_facts.list }}"

    - name: Create ~/.ssh Directory
      ansible.builtin.file:
        path: "{{ home_dir }}/.ssh"
        state: directory
        mode: '0700'

    - name: Generate Deployment Keys
      community.crypto.openssh_keypair:
        path: "{{ home_dir }}/.ssh/id_rsa_{{ cluster_name }}"
        comment: "core@ocp.kubeadmin"
      register: ssh_facts

    - name: Set ssh_key
      ansible.builtin.set_fact:
        ssh_key: "{{ lookup('file', '{{ ssh_facts.filename }}.pub') }}"

    - name: Set ssh_private_key
      ansible.builtin.set_fact:
        ssh_private_key: "{{ lookup('file', '{{ ssh_facts.filename }}') }}"
      no_log: true
  # End Block
