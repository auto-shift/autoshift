---
- name: Get OpenShift Infra Cluster Facts
  kubernetes.core.k8s_info:
    api_key: "{{ k8s_auth_api_key }}"
    host: "{{ k8s_auth_host }}"
    kind: Infrastructure
    name: cluster
  register: infra_facts

- name: Set Infra ID
  ansible.builtin.set_fact:
    infra_id: "{{ infra_facts.resources[0].status.infrastructureName }}"

- name: Get Master Machine Facts
  kubernetes.core.k8s_info:
    api_key: "{{ k8s_auth_api_key }}"
    host: "{{ k8s_auth_host }}"
    api: machine.openshift.io/v1beta1
    kind: Machine
    name: "{{ infra_id }}-master-0"
    namespace: openshift-machine-api
  register: machine_facts

- name: Set ami_id Fact
  ansible.builtin.set_fact:
    ami_id: "{{ machine_facts.resources[0].spec.providerSpec.value.ami.id }}"

- name: Gather VPC Facts
  amazon.aws.ec2_vpc_net_info:
    filters:
      vpc-id: "{{ vpc_id }}"
  register: vpc_facts

- name: Set VPC ID fact
  ansible.builtin.set_fact:
    vpc_id: "{{ vpc_facts.vpcs[0].vpc_id }}"

- name: Set VPC CIDR fact
  ansible.builtin.set_fact:
    vpc_cidr: "{{ vpc_facts.vpcs[0].cidr_block }}"

- name: Gather subnet facts
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc_id }}"
      availability-zone: "{{ region }}a"
      "tag:use": private
  register: subnet_facts

- name: Set Subnet ID fact
  ansible.builtin.set_fact:
    subnet_id_a: "{{ subnet_facts.subnets[0].subnet_id }}"

- name: Gather subnet facts
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc_id }}"
      availability-zone: "{{ region }}b"
      "tag:use": private
  register: subnet_facts

- name: Set Subnet ID fact
  ansible.builtin.set_fact:
    subnet_id_b: "{{ subnet_facts.subnets[0].subnet_id }}"

- name: Gather subnet facts
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc_id }}"
      availability-zone: "{{ region }}c"
      "tag:use": private
  register: subnet_facts

- name: Set Subnet ID fact
  ansible.builtin.set_fact:
    subnet_id_c: "{{ subnet_facts.subnets[0].subnet_id }}"

- name: Gather subnet facts
  amazon.aws.ec2_vpc_subnet_info:
    filters:
      vpc-id: "{{ vpc_id }}"
      "tag:use": private
  register: subnet_facts
