#!/usr/local/bin/ansible-playbook
---
- name: Create OpenShift Cluster
  hosts: localhost
  gather_facts: no 
  collections:
    - community.aws
    - kubernetes.core
  vars_files:
    - vars/all/main.yml
  tasks:
  - name: Check if env is defined
    set_fact: 
      env: "{{ lookup('env', 'env') }}"

  - name: Confirm Cluster
    pause:
      prompt: "Confirm cluster (infra/dev/test/sbx/mgmt/prod/impl)"
    register: cluster_response
    delegate_to: localhost
    when: env == ""

  - name: Store Env
    set_fact:
      env: "{{ cluster_response.user_input }}"
    when: env == ""

  - name: "Include vars for {{ env }}"
    include_vars: "vars/{{ env }}/main.yml"

  - name: set K8S_AUTH_HOST
    set_fact: 
      K8S_AUTH_HOST: "https://api.{{ env }}.{{ base_domain }}:6443"

  - name: Check if K8S_AUTH_API_KEY is defined
    set_fact: 
      K8S_AUTH_API_KEY: "{{ lookup('env', 'K8S_AUTH_API_KEY') }}"

  - name: Confirm Cluster
    pause:
      prompt: "Enter Auth Token for {{ K8S_AUTH_HOST }}"
    register: auth_token
    delegate_to: localhost
    when: K8S_AUTH_API_KEY == ""

  - name: Store Env
    set_fact:
      K8S_AUTH_API_KEY: "{{ auth_token.user_input }}"
    when: K8S_AUTH_API_KEY == ""
    
- name: Run Role
  hosts: localhost
  gather_facts: no
  environment:
    K8S_AUTH_SSL_CA_CERT: '/etc/pki/tls/certs/ca-bundle.crt'
    K8S_AUTH_VERIFY_SSL: 'no'
    AWS_REGION: "{{ region }}"
  vars:
    setup_dependencies: false
    create_cluster: false
    create_cluster_acm: false
    install_argo: true
    restore: false
    install_argo_apps: true
    test_argo_apps: true
    remove_kubeadmin: true
    K8S_AUTH_API_KEY: "{{ hostvars['localhost']['K8S_AUTH_API_KEY'] }}"
    K8S_AUTH_HOST: "{{ hostvars['localhost']['K8S_AUTH_HOST'] }}"
  vars_files:
    - vars/all/main.yml
    - "vars/{{ hostvars['localhost']['env'] }}/main.yml"
  roles: 
    - msf-iac-day-1
      
